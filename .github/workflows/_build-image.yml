name: Build image

on:
  workflow_call:
    inputs:
      build-dir:
        type: string
        required: true
      dockerfile:
        type: string
        required: true
      push-to-ecr:
        type: boolean
        required: false
        default: false
      ecr-repository-name:
        type: string
        required: false
      ecr-region:
        type: string
        required: false
        default: ap-northeast-1
      ecr-iam-role:
        type: string
        required: false
        default: arn:aws:iam::836375047646:role/GitHubActionsOIDC
    outputs:
      image-path:
        value: ${{ jobs.build-and-push.outputs.image-path }}

permissions:
  id-token: write
  contents: read

env:
  ECR_REPOSITORY_NAME: ${{ inputs.ecr-repository-name }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
    
    outputs:
      image-path: ${{ steps.push-image.outputs.image }}

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: 'true'

      - name: Build image
        run: |
          docker build -f ${{ inputs.dockerfile }} -t $ECR_REPOSITORY_NAME:$IMAGE_TAG ${{ inputs.build-dir }}

      - name: Configure AWS Credentials
        if: ${{ inputs.push-to-ecr }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.ecr-iam-role }}
          role-session-name: GitHubActions
          aws-region: ${{ inputs.ecr-region }}
          mask-aws-account-id: 'no'

      - name: Login to Amazon ECR
        id: login-ecr
        if: ${{ inputs.push-to-ecr }}
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag, and push image to Amazon ECR
        id: push-image
        if: ${{ inputs.push-to-ecr }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag $ECR_REPOSITORY_NAME:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REPOSITORY_NAME:$IMAGE_TAG"

